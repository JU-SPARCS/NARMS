/ This partial view shows a schedule over one week showing the week days and shift every 30 minutes.
/ 
  Required Parameters:
  *  schedules    Array("Schedules::Worker") It contains all the slots to fit in the schedule.
/ 
  Optional Parameters:
  *  start_at   Time                         It is the date of day to start the schedule with. By default, start_at = Date.today.beginning_of_week

.table-responsive
  %table.table.table-condensed
    %thead
      %tr
        %th.col-lg-1
        - (0..6).each do |i|
          %th
            .text-center= (start_at + i*60*60*24).strftime("%A %-d/%-m")
      %tbody
        - time = Time.new(start_at.year, start_at.month, start_at.day, 00, 00) 

        - display_row = -1
        - while time.day == start_at.day do

          - slots_to_display = Array.new
          - (0..6).each do |i|
            - slot_to_display = nil
            - schedules.each do |schedule|
              - schedule.slots.each do |slot|
                - if slot.begin == (time + (i * 60*60*24))
                  - slot_to_display = slot
                  - display_row = 1
                  - break 2

            - slots_to_display.push(slot_to_display)


          - if display_row == 0
            - display_row -= 1
            - (0..1).each do |j|
              %tr
              - (0..7).each do |i|
                %td


          - if display_row > 0
            - display_row -= 1
            %tr
              %td
                %span.text-center= time.strftime("%H:%M")

              - slots_to_display.each do |slot|
                - if slot != nil
                  %td{:align => "center"}
                    = slot.schedule.worker_profile.facility.name                  

                - else
                  %td{:align => "center"}

          - time += 60*30 
